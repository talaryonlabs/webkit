@using Talaryon.WebKit.Services.WebKit
@inject IWebKit WebKit
@rendermode InteractiveServer

@code {

    [Parameter] public string? Title { get; set; }

    [Parameter] public string? Description { get; set; }

    [Parameter] public string? Image { get; set; }

    private WebKitMetaOptions _metaOptions = new();
    
    protected override void OnParametersSet()
    {
        _metaOptions = WebKit.GetOptions<WebKitMetaOptions>();
    }

}

<PageTitle>@(Title ?? _metaOptions.Title)</PageTitle>
<HeadContent>
    <title>@(Title ?? _metaOptions.Title)</title>

    <meta name="description" content="@(Description ?? _metaOptions.Description)"/>

    <meta property="og:type" content="website"/>
    <meta property="og:title" content="@(Title ?? _metaOptions.Title)"/>
    <meta property="og:description" content="@(Description ?? _metaOptions.Description)"/>
    <meta property="og:image" content="@(Image ?? _metaOptions.Image)"/>
    <meta property="og:site_name" content="@_metaOptions.ApplicationName"/>

    <meta name="twitter:card" content="summary_large_image">
    @*@if (WebKit.Default.TwitterAccount?.Length > 0)
    {
        <meta name="twitter:site" content="@WebKit.Default.TwitterAccount">
    }*@
    <meta name="twitter:title" content="@(Title ?? _metaOptions.Title)">
    <meta name="twitter:description" content="@(Description ?? _metaOptions.Description)">
    <meta name="twitter:image" content="@(Image ?? _metaOptions.Image)">
    <meta name="twitter:image:src" content="@(Image ?? _metaOptions.Image)">
</HeadContent>