@using Talaryon.WebKit.Services.WebKit
@inherits WebKitComponentBase<WebKitSimpleFooter>
@inject IWebKit WebKit

@code {
    private readonly IDictionary<string, object> _parameters = new Dictionary<string, object>();
    [Parameter] public override RenderFragment? ChildContent { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public override Dictionary<string, object>? InputAttributes { get; set; }

    
    
    protected override void OnParametersSet()
    {
        if (ChildContent is not null && !_parameters.TryAdd("ChildContent", ChildContent))
            _parameters["ChildContent"] = ChildContent;

        if (InputAttributes is not null && !_parameters.TryAdd("InputAttributes", InputAttributes))
            _parameters["InputAttributes"] = InputAttributes;
    }

}

<DynamicComponent Type="@(Component = WebKit.GetComponent<IWebKitFooter>() ?? throw new WebKitComponentNotFoundException())" Parameters="@_parameters" />